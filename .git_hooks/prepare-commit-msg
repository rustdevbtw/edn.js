#!/bin/sh

# Automatically export all variables to child processes
set -a

export GIT_COMMITTER_NAME=$(git config user.name)
export GIT_COMMITTER_EMAIL=$(git config user.email)

# Read from the terminal
exec </dev/tty

# Path to the commit message file
commit_msg_file="$1"

# Read the commit message file content
commit_msg=$(cat "$commit_msg_file")

# Filter out comment lines and empty lines
non_comment_lines=$(echo "$commit_msg" | sed '/^\s*#/d' | sed '/^\s*$/d')

# Check if the commit message is empty or contains only comments
if [ -z "$non_comment_lines" ]; then
  cts --as-hook
  # If the commit message is empty, replace it with .cts/msg
  cat .cts/msg >"$commit_msg_file"
  exit 0
elif [ "$(echo "$non_comment_lines" | wc -l)" -eq 1 ] && echo "$non_comment_lines" | grep -q '^Signed-off-by:'; then
  cts --as-hook
  # If the only non-comment line is "Signed-off-by:", prepend .cts/msg to .git/COMMIT_EDITMSG
  {
    cat .cts/msg
    echo "$commit_msg"
  } >"$commit_msg_file"
  exit 0
else
  # Exit successfully if the commit message is provided and valid
  exit 0
fi
